{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoClick","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","onQueryChange","onQueryReset","selectedFilter","onFilterSelect","value","onChange","event","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedUser","onClose","isLoading","href","email","name","App","useState","setTodos","setSelectedTodo","setSelectedUser","setIsLoading","filterStatus","setFilterStatus","setQuery","useEffect","catch","error","Error","filter","queryStr","filteredTodosArr","toLowerCase","includes","filteredTodos","userId","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c8c498d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoClick: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoClick,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodo === todo,\n            '': selectedTodo !== todo,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onTodoClick(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames({\n                  'far fa-eye': selectedTodo !== todo,\n                  'far fa-eye-slash': selectedTodo === todo,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface Props {\n  query: string;\n  onQueryChange: (query: string) => void;\n  onQueryReset: () => void;\n  selectedFilter: string;\n  onFilterSelect: (filter: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  onQueryReset,\n  selectedFilter,\n  onFilterSelect,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={(event) => onFilterSelect(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length !== 0 && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onQueryReset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo | null;\n  selectedUser: User | null;\n  onClose: () => void;\n  isLoading: boolean;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  selectedUser,\n  onClose,\n  isLoading,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [query, setQuery] = useState<string>('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((todo) => {\n        setTodos(todo);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        throw new Error(error);\n      });\n  }, []);\n\n  const handleTodoClick = (todo: Todo) => {\n    setIsLoading(true);\n    setSelectedTodo(todo);\n\n    getUser(todo.userId)\n      .then((user) => {\n        setSelectedUser(user);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        throw new Error(error);\n      });\n  };\n\n  const filteredTodos = () => {\n    let filteredTodosArr = [...todos];\n\n    if (filterStatus === 'completed') {\n      filteredTodosArr = filteredTodosArr.filter((todo) => todo.completed);\n    }\n\n    if (filterStatus === 'active') {\n      filteredTodosArr = filteredTodosArr.filter((todo) => !todo.completed);\n    }\n\n    if (query) {\n      filteredTodosArr = filteredTodosArr.filter((todo) => (\n        todo.title.toLowerCase().includes(query.toLowerCase())\n      ));\n    }\n\n    return filteredTodosArr;\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleFilterSelect = (filter: string) => {\n    setFilterStatus(filter);\n  };\n\n  const handleQueryChange = (queryStr: string) => {\n    setQuery(queryStr);\n  };\n\n  const handleQueryReset = () => {\n    setQuery('');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedFilter={filterStatus}\n                onFilterSelect={handleFilterSelect}\n                onQueryChange={handleQueryChange}\n                onQueryReset={handleQueryReset}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos()}\n                    onTodoClick={handleTodoClick}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          selectedUser={selectedUser}\n          onClose={handleModalClose}\n          isLoading={isLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}