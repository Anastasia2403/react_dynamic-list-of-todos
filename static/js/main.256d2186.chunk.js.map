{"version":3,"sources":["components/TodoListBody/TodoListBody.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoListBody","todos","onTodoClick","selectedTodo","map","todo","className","classNames","id","completed","title","type","onClick","TodoList","TodoFilter","query","onQueryChange","onQueryReset","selectedFilter","onFilterSelect","value","onChange","event","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedUser","onClose","isLoading","href","email","name","FilterStatus","App","useState","setTodos","setSelectedTodo","setSelectedUser","setIsLoading","filterStatus","setFilterStatus","setQuery","filteredTodos","useMemo","filteredTodosArr","filter","toLowerCase","includes","handleModalClose","useCallback","useEffect","catch","error","Error","queryStr","userId","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.256d2186.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoClick: (todo: Todo) => void;\n}\n\nexport const TodoListBody: React.FC<Props> = ({\n  todos,\n  onTodoClick,\n  selectedTodo,\n}) => (\n  <tbody>\n    {todos.map((todo) => (\n      <tr\n        data-cy=\"todo\"\n        className={classNames({\n          'has-background-info-light': selectedTodo === todo,\n        })}\n        key={todo.id}\n      >\n        <td className=\"is-vcentered\">{todo.id}</td>\n        <td className=\"is-vcentered\">\n          {todo.completed && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className={classNames({\n            'has-text-success': todo.completed,\n            'has-text-danger': !todo.completed,\n          })}\n          >\n            {todo.title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => onTodoClick(todo)}\n          >\n            <span className=\"icon\">\n              <i className={classNames({\n                'far fa-eye': selectedTodo !== todo,\n                'far fa-eye-slash': selectedTodo === todo,\n              })}\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n    ))}\n  </tbody>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoListBody } from '../TodoListBody';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoClick: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoClick,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n    <TodoListBody\n      todos={todos}\n      onTodoClick={onTodoClick}\n      selectedTodo={selectedTodo}\n    />\n  </table>\n);\n","import React from 'react';\n\ninterface Props {\n  query: string;\n  onQueryChange: (query: string) => void;\n  onQueryReset: () => void;\n  selectedFilter: string;\n  onFilterSelect: (filter: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  onQueryReset,\n  selectedFilter,\n  onFilterSelect,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={(event) => onFilterSelect(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onQueryReset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo | null;\n  selectedUser: User | null;\n  onClose: () => void;\n  isLoading: boolean;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  selectedUser,\n  onClose,\n  isLoading,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useState,\n  useMemo,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { User } from './types/User';\n\nconst FilterStatus = {\n  ALL: 'all',\n  COMPLETED: 'completed',\n  ACTIVE: 'active',\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterStatus, setFilterStatus] = useState(FilterStatus.ALL);\n  const [query, setQuery] = useState('');\n\n  const handleTodoClick = (todo: Todo) => {\n    setIsLoading(true);\n    setSelectedTodo(todo);\n\n    getUser(todo.userId)\n      .then((user) => {\n        setSelectedUser(user);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        throw new Error(error);\n      });\n  };\n\n  const filteredTodos = useMemo(() => {\n    let filteredTodosArr = [...todos];\n\n    switch (filterStatus) {\n      case FilterStatus.COMPLETED:\n        filteredTodosArr = filteredTodosArr.filter((todo) => todo.completed);\n        break;\n      case FilterStatus.ACTIVE:\n        filteredTodosArr = filteredTodosArr.filter((todo) => !todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    if (query) {\n      filteredTodosArr = filteredTodosArr.filter((todo) => (\n        todo.title.toLowerCase().includes(query.toLowerCase())\n      ));\n    }\n\n    return filteredTodosArr;\n  }, [todos, filterStatus, query]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedTodo(null);\n  }, [setSelectedTodo]);\n\n  const handleFilterSelect = (filter: string) => {\n    setFilterStatus(filter);\n  };\n\n  const handleQueryChange = (queryStr: string) => {\n    setQuery(queryStr);\n  };\n\n  const handleQueryReset = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((todo) => {\n        setTodos(todo);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedFilter={filterStatus}\n                onFilterSelect={handleFilterSelect}\n                onQueryChange={handleQueryChange}\n                onQueryReset={handleQueryReset}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    onTodoClick={handleTodoClick}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          selectedUser={selectedUser}\n          onClose={handleModalClose}\n          isLoading={isLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}